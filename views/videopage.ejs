 <nav class="nav-inline position-right box-shadow-l">
  <ul>
    <li>
      <a href="index" class="button button-s nav-button box-shadow-l">Home</a>
    </li>
    <li class="float-right">
      <a href="login.html" class="button button-s nav-button box-shadow-l">Login</a>
    </li>
    <li class="float-right">
      <a href="..." class="button button-s nav-button box-shadow-l">Tutorials</a>
    </li>
    <li class="float-right">
      <a href="..." class="button button-s nav-button box-shadow-l">Register</a>
    </li>
  </ul>
</nav>

  <main >

  	<section>
      <div class="container margin-bottom-xl margin-top-xl margin-left-l">
        <h1 class="video-heading hidden" id="title"><%= heading %></h1>
     </div> 
    </section>

    <section>
      <div class="container margin-bottom-xl margin-top-xl margin-left-l">
        <h1 class="video-heading text-align-center"> Getting Started with Python</h1>
     </div> 
    </section>

     <section>
      <div class="video-flex">
      <div class="container info padding-m border-radius box-shadow-xl margin-bottom-xl">
        <h1 class="text-align-center">What is an IDE?</h1>
        <p>First if we want to write python code we have to find an IDE that you can run and write your python code in. There are many options such as VSCode, my favorite, but there are others such as Sublime, Atom, XCode for Mac, and many more. It is all based on personal preference. Since VSCode is my favorite, I will give you a brief tutorial there.</p>
      </div>
    </div>
    </section>

  
    <section>
        <div class="flex-center margin-bottom-m">
           
        </div> 

    </section>

    <section>
      <div class="video-flex vid-l margin-bottom-xl">

        <div class="margin-left-xl" id="yplayer">
<iframe class="box-shadow-l" id="video" width="853" height="480" src="<%= videolink %>" frameborder="0" allow="accelerometer; autoplay; clipboard-write; gyroscope; picture-in-picture" allowfullscreen></iframe>
      </div>

       <div class="margin-left-xl video-exercise border-radius">
      <h1 class="text-align-center padding-bottom-s">Video Script</h1>
      <div class="script-div">
      <p><strong class="bold">Introduction:</strong></p>

<p><strong class="bold">Professor</strong>: Next week we’ll be learning Python. I expect each one of you to do some research this weekend over Python and we will have a class discussion on Monday.</p>

<p>Brenda comes home and starts researching Python becomes drowsy and falls asleep at her keyboard</p>

<p><strong class="bold">Brenda</strong>: (yawns) I’m tired.
Dream Begins!</p>

<p>Brenda wakes up in her dream to see a python on her bed and freaks out!!</p>

<p><strong class="bold">Python</strong>: “Python” What first comes to mind when you hear this word? The first thing you probably thought of was a snake, which is probably why you dreamt of me. Luckily, if you are not a huge fan of snakes, that is not the kind of python we are referring to. Unfortunately, I am a python and you will have to put up with me for the sake of learning python, as this is your dream and you assumed the kind of research  you will be doing is about snakes. However, you will be learning a high-level and general-purpose programming language, in which we will be learning the fundamentals of coding in python. 
</p>
</p>
    </div>
    </div>

        </div>
    </section>

    <section>
      <div class="flex-center margin-bottom-xl padding-top-s padding-bottom-s background-light-900 border-radius" style="margin-right: 450px; margin-left: 450px">
        <button class="margin-right-m inter" type="submit" id="test"> Save Video </button>
      </div>
    </section>

    <section>
      <div class="container info padding-m border-radius box-shadow-xl margin-top-xl margin-bottom-xl">
        <h1 class="text-align-center">Exercise: </h1>
        <p class="text-align-center">Can you print “hello world” in Python?</p>
      </div>
    </section>

    <section>
        <h1 class="inter display-title-xl text-align-center">Python Interpreter</h1>
        <div class="container margin-bottom-xl margin-top-xl">
        <iframe src="https://trinket.io/embed/python/6772cf21db" width="100%" height="356" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>
      </div>
    </section>

  </main>

  <footer class="footer padding-vertical-xl border-top border-color-primary-600 segmentcolor">
  <div class="container">

    <div class="text-align-center">
    <h2 class="display-title display-title-l margin-bottom-m">Digital Story Telling</h2>
    <nav class="nav-inline">
      <li>
        <a href="">Contact</a>
      </li>
      <li>
        | 
      </li>
      <li>
        <a href="">Mission</a>
      </li>
      <li>
        | 
      </li>
      <li>
        <a href="">Contribute</a>
      </li>
    </nav>
  </div>

  </div>
</footer>

<script>
let vidname = document.querySelector("#title").textContent


let vid = document.querySelector("#video")
let id = vid.src.split("embed/")[1]
// Get the Video ID
console.log(id)

let check = document.querySelector("#check")


// let x = document.querySelector('#resume')
var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('yplayer', {
          videoId: id,
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          player.seekTo( <%= time %>)
          // setTimeout(stopVideo, 5000);

          done = true;
        }
      }
      function stopVideo() {
        console.log("pause video here")
        player.pauseVideo();
      }

check.addEventListener('click', (e) => {
  player.seekTo(10)
  player.pauseVideo()
})



let vidtime = [];
// x.addEventListener('click', (e) => {
//   // console.log("test")
//   console.log(player.playerInfo.currentTime)
//   vidtime.push(player.playerInfo.currentTime)
// })


// Player will click save button. POST request to save, video timestamp saved. When the video starts
// it should go to the saved position



let n = document.querySelector("#test")
// n.addEventListener('click', (e) => {
//   console.log("test")
// })

n.addEventListener('click', (e) => {

console.log(player.playerInfo.currentTime)
vidtime.push(player.playerInfo.currentTime)
let data = {content: vidtime, name: vidname}

  fetch("/save", {
  method: "POST",
  body: JSON.stringify(data),
  headers: {
    "Content-Type": "application/json"
  },
  credentials: "same-origin"
}).then(function(response) {
  response.status     //=> number 100–599
  response.statusText //=> String
  response.headers    //=> Headers
  response.url        //=> String

  return response.text()
}, function(error) {
  error.message //=> String
})
})


</script>