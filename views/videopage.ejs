<nav class=" nav-background padding-xs nav-inline">
  <ul>
    <li>
      <a class="nav-main border-radius" href="/videos">Videos</a>
    </li>
    
    <li class="nav-right">
      <a class="nav-button border-radius" href="/users/logout">Signout</a>
    </li>
  </ul>
</nav>

<main>
  <!-- 
  <section>
    <div class="segment flex flex-justify-center">

    
        <h1 class="heading padding-left-xl">Python Programming Videos</h1>

    </div>  

  </section -->


    <section>
      <div class="">
        <h1 class="hidden" id="title"><%= heading %></h1>
     </div> 
    </section>

    <section>
    <div class="segment-one padding-top-xl">
        <p class="pop text-align-center underline"> Please Rotate your phone if you are using mobile for the best experience</p>
        <h1 class="heading-s text-align-center">Python Programming Video:</h1>
        <div class="video-div">
        <div id="yplayer">
          <iframe class="video" id="video" src="<%= videolink %>" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
    </div>
        </div>
        <div class="video-div margin-bottom-xl"> 
        <button class="margin-top-xl padding-xl video-save nav-button" type="submit" id="test"> Save Video </button>
             <div class="container">
          <h1 class="padding-top-m poppins">Video Script</h1>
              <div class="script-box padding-xl box-shadow-xl">
                
                  <% if(script) { %>
                    <textarea class="" name="script" id="" cols="30" rows="10" readonly>
                  <%= script %>
                  </textarea>
                  <% } else { %>
                    <p>No text</p>
                <% } %>

              </div>
        </div>

        <div class="container video-div margin-top-m">
          <h1 class="padding-top-m poppins text-align-center">Python Exercise</h1>
              <div class="exercise padding-xl border-box">
                
                    
                   <% if(exercise) { %>
                    <textarea class="" name="script" id="" cols="30" rows="10" readonly>
                  <%= exercise %>
                  </textarea>
                  <% } else { %>
                    <p>No Exercise</p>
                <% } %>

              </div>
        </div>
      </div>
    </div>

    </section>

<section>
    <div class="segment padding-top-xl programming margin-bottom-xl">
        <h1 class="pop text-align-center">Python Interpreter</h1>
        <iframe src="https://trinket.io/embed/python" width="100%" height="356" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>
    </div>
</section>

<script>
let vidname = document.querySelector("#title").textContent


let vid = document.querySelector("#video")
let id = vid.src.split("embed/")[1]
// Get the Video ID
console.log(id)

// let check = document.querySelector("#check")


// let x = document.querySelector('#resume')
var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('yplayer', {
          videoId: id,
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          player.seekTo( <%= time %>)
          // setTimeout(stopVideo, 5000);

          done = true;
        }
      }
      function stopVideo() {
        console.log("pause video here")
        player.pauseVideo();
      }

// check.addEventListener('click', (e) => {
//   player.seekTo(10)
//   player.pauseVideo()
// })



let vidtime = [];
// x.addEventListener('click', (e) => {
//   // console.log("test")
//   console.log(player.playerInfo.currentTime)
//   vidtime.push(player.playerInfo.currentTime)
// })


// Player will click save button. POST request to save, video timestamp saved. When the video starts
// it should go to the saved position



let n = document.querySelector("#test")
// n.addEventListener('click', (e) => {
//   console.log("test")
// })

n.addEventListener('click', (e) => {

console.log(player.playerInfo.currentTime)
vidtime.push(player.playerInfo.currentTime)
let data = {content: vidtime, name: vidname}

  fetch("/save", {
  method: "POST",
  body: JSON.stringify(data),
  headers: {
    "Content-Type": "application/json"
  },
  credentials: "same-origin"
}).then(function(response) {
  response.status     //=> number 100â€“599
  response.statusText //=> String
  response.headers    //=> Headers
  response.url        //=> String

  return response.text()
}, function(error) {
  error.message //=> String
})
})


</script>